<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:flow="http://www.springframework.org/schema/webflow-config"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-1.0.xsd">


	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName" value="com.mysql.jdbc.Driver" />

		<property name="url" value="${jdbc_url}" />

		<property name="username" value="${jdbc_username}" />

		<property name="password" value="${jdbc_password}" />

	</bean>
	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/xml/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:config/mapper/*Mapper.xml" />
		<!-- <property name="typeAliasesPackage" value="${mybatis.alias.basepackage}" /> -->
	</bean>
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--<property name="sessionFactory"><ref local="sqlSessionFactory"/></property> 
		</bean> -->



	<bean id="transactionProxyFactory" abstract="true" lazy-init="true"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">

		<property name="transactionManager">

			<ref local="transactionManager" />

		</property>

		<property name="transactionAttributes">

			<props>

				<prop key="save*">PROPAGATION_REQUIRED</prop>

				<prop key="insert*">PROPAGATION_REQUIRED</prop>

				<prop key="del*">PROPAGATION_REQUIRED</prop>

				<prop key="add*">PROPAGATION_REQUIRED</prop>

				<prop key="update*">PROPAGATION_REQUIRED</prop>

				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="search*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="remove*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="query*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="list*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="count*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>

			</props>

		</property>

	</bean><!-- <bean id="Service" class="tc.springtest.ServiceImpl"> <property 
		name="dataSource" ref="dataSource"></property> </bean> <bean id="Dao" class="tc.springtest.DaoImpl"> 
		<property name="dataSource" ref="dataSource"></property> </bean> -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 定义事务传播属性 <tx:advice id="txAdvice" transaction-manager="txManager"> 
		<tx:attributes> <tx:method name="query*" propagation="NOT_SUPPORTED" read-only="true"/> 
		<tx:method name="*" propagation="REQUIRED"/> </tx:attributes> </tx:advice> 
		<aop:config> <aop:pointcut id="transactionPointCut" expression="execution(* 
		com.royzhou.jdbc..*.*(..))"/> <aop:advisor pointcut-ref="transactionPointCut" 
		advice-ref="txAdvice"/> </aop:config> -->

	 <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="cola.machine.calendar.user.dao.UserMapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	<bean id="activeMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="cola.machine.calendar.user.dao.ActiveMapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	<bean id="pwdrstMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="cola.machine.calendar.user.dao.PwdrstMapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	<!--<bean id="LoginAction" class="cola.machine.calendar.login.LoginAction">
		<property name="userService">
			<ref bean="userService" />
		</property>
	</bean> -->
<!-- 	<bean id="loginAjax" class="cola.machine.calendar.login.LoginAjax">
		<property name="userService">
			<ref bean="userService" />
		</property>
	</bean>
 -->	
 	<bean id="userService" class="cola.machine.calendar.user.service.impl.UserServiceImpl">
		<property name="userMapper" ref="userMapper"></property>
		<property name="activeMapper" ref="activeMapper"></property>
		<property name="pwdrstMapper" ref="pwdrstMapper"></property>
	</bean>


	<bean id="activityDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
			value="cola.machine.calendar.activity.dao.ActivityDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	<bean id="activityService"
		class="cola.machine.calendar.activity.service.impl.ActivityServiceImpl">
		<property name="activityDao" ref="activityDao"></property>
	</bean>
	<!-- <bean id="activityAjax"
		class="cola.machine.calendar.activity.ajax.ActivityAjax">
		<property name="activityService" ref="activityService"></property>
	</bean>
	 --><!-- <bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		<property name="mapperInterface" value="com.mybatis.UserDao"></property> 
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property> </bean> 
		<bean id="userService" class="colamachine.user.service.impl.UserServiceImpl.java"> 
		<property name="userMapper" ref="userMapper"></property> </bean> -->
</beans>
